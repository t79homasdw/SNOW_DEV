<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name/>
        <active>true</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments>Trigger GitHub  Azure resource provisioning pipeline with payload.</comments>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>true</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style>primary</form_style>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Send Payload</name>
        <onclick/>
        <order>100</order>
        <script><![CDATA[current.update();
action.setRedirectURL(current);
//var resourceSummary = JSON.parse(current.variables.resource_summary.getValue());
var resourceSummary = {
    subject: "subject",
    sans: "sans",
    fn: "fn",
    email: "email"
}

var resources = []; //array to store all the resource
var i = 0;
var resObj = {};

// servicenow environments
var snowEnvironment = "production";
var instanceName = gs.getProperty("instance_name");
if (instanceName == "dev209030") {
    snowEnvironment = "development";
}

if (resources.length > 0) {
    var payload = {
        "event_type": eventType,
        "client_payload": {
            "additional_details": {
                "requestedFor": current.getValue(),
                "lineManager": current.ni.QS754ead1b83341a100bf1c4d0deaad3b4.getValue(),
                "entity": current.ni.QSa878ed1383b01a100bf1c4d0deaad331.getValue(),
                "subject": current.variables.ni.QSa27a619783b01a100bf1c4d0deaad3a9.getValue(),
                "sans": current.variables.ni.QSf2baa15b83b01a100bf1c4d0deaad39b.getValue(),
                "fn": current.variables.ni.QSe91ba51783b01a100bf1c4d0deaad379.getValue(),
                "email": current.ni.QS735c255783f01a100bf1c4d0deaad3fd.getValue()
            },
            "snowEnvironment": snowEnvironment,
            "subscriptionId": current.variables.subscription.getValue(),
            "record_sysid": current.variables.u_resource_name.getValue(),
            "task_details": {
                "number": current.number.getValue(),
                "sysid": current.sys_id.getValue()
            },
            "ritm_details": {
                "number": current.request_item.number.getValue(),
                "sysid": current.request_item.sys_id.getValue()
            }
        }
    };
} else {
    gs.info("Azure IaC Automation Payload Script Error: No Resource");
    current.work_notes = "Manual trigger failed: Azure IaC Automation Payload Script unable to collect resources";
    current.update();
}

try {
    var r = new sn_ws.RESTMessageV2('GitHub', 'repository-dispatch-deployment');
    r.setRequestBody(JSON.stringify(payload));
    var response = r.execute();
    var responseBody = response.getBody();
    var httpStatus = response.getStatusCode();
    if (httpStatus == 204) {
        gs.info("Azure IaC Automation: Trigger GitHub workflow");
        gs.info(JSON.stringify(payload, null, '\t'));
        current.work_notes = "Triggered GitHub Workflow using 'Send Payload' button with payload: \n \n" + "[code]<pre>" + JSON.stringify(payload["client_payload"], null, "\t").split("\n").join("<br>") + "</pre>[code]";
        current.update();
    } else {
        gs.info("Azure IaC Automation integration failed. Status code: " + httpStatus);
        current.work_notes = "Azure IaC Automation integration failed. Status code: " + httpStatus;
        current.update();
    }

} catch (ex) {
    var message = ex.message;
    gs.info("Azure IaC Automation integration failed :" + message);
    current.work_notes = "Azure IaC Automation integration failed" + message;
    current.update();
}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>dthomas</sys_created_by>
        <sys_created_on>2024-10-22 20:01:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>432c0943831552100bf1c4d0deaad3c4</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>Send Payload</sys_name>
        <sys_overrides/>
        <sys_package display_value="Private SSL" source="x_1541301_privat_0">cf28659f83701a100bf1c4d0deaad370</sys_package>
        <sys_policy/>
        <sys_scope display_value="Private SSL">cf28659f83701a100bf1c4d0deaad370</sys_scope>
        <sys_update_name>sys_ui_action_432c0943831552100bf1c4d0deaad3c4</sys_update_name>
        <sys_updated_by>dthomas</sys_updated_by>
        <sys_updated_on>2024-10-23 16:49:12</sys_updated_on>
        <table>x_1541301_privat_0_request</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>432c0943831552100bf1c4d0deaad3c4</id>
        <sys_created_by>dthomas</sys_created_by>
        <sys_created_on>2024-10-22 20:01:00</sys_created_on>
        <sys_id>027cfe1783995a100bf1c4d0deaad343</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>dthomas</sys_updated_by>
        <sys_updated_on>2024-10-22 20:01:00</sys_updated_on>
        <table>sys_ui_action</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
